import {
	Link,
	Route,
	BrowserRouter as Router,
	Routes,
	useParams,
} from 'react-router'
import './index.css'
import { Users, updateUsersData } from './userData'

function Leaderboard() {
	// –î–ª—è –ø—Ä–∏–º–µ—Ä–∞: —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
	const handleUpdateUsers = () => {
		const updatedUsers = Users.map(user => ({
			...user,
			exp: String(Number(user.exp) + 10), // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º XP –Ω–∞ 10 –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
		}))
		updateUsersData(updatedUsers)
		window.location.reload() // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ state
	}

	return (
		<div className='app-container'>
			<header className='header'>
				<button
					className='back-button'
					onClick={() =>
						(window.location.href = 'https://it-course-six.vercel.app/')
					}
				>
					‚Üê –ù–∞ –≥–ª–∞–≤–Ω—É—é
				</button>
				<h1 className='page-title' style={{marginRight:'20px'}}>üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤</h1>
				<button className='update-button' onClick={handleUpdateUsers}>
					–û–±–Ω–æ–≤–∏—Ç—å
				</button>
			</header>

			<div className='users-grid'>
				{Users.map((user, index) => (
					<Link to={`/user/${user.id}`} className='user-card' key={index}>
						<div className='user-rank'>#{index + 1}</div>
						<div className='user-avatar'>{user.avatar}</div>
						<div className='user-info'>
							<h3>{user.fullName}</h3>
							<div className='exp-container'>
								<div className='exp-bar'>
									<div
										className='exp-progress'
										style={{ width: `${user.progress}%` }}
									></div>
								</div>
								<span className='exp-value'>{user.exp} XP</span>
							</div>
						</div>
					</Link>
				))}
			</div>
		</div>
	)
}

// ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ (UserProfile –∏ App –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

function UserProfile() {
	const { id } = useParams()
	const user = Users.find(u => u.id === parseInt(id))

	if (!user) {
		return <div className='not-found'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω</div>
	}

	return (
		<div className='app-container'>
			<header className='header'>
				<button className='back-button' onClick={() => window.history.back()}>
					‚Üê –ù–∞–∑–∞–¥
				</button>
				<h1 className='page-title'>–ü—Ä–æ—Ñ–∏–ª—å</h1>
			</header>

			<div className='profile-content'>
				<div className='profile-header'>
					<div className='avatar-container'>
						<div className='profile-avatar'>{user.avatar}</div>
						<div className='level-badge'>{user.level}</div>
					</div>
					<div className='profile-main-info'>
						<h2 className='profile-name'>{user.fullName}</h2>
						<div className='profile-stats'>
							<div className='stat-item'>
								<div className='stat-value'>{user.exp}</div>
								<div className='stat-label'>XP</div>
							</div>
							<div className='stat-item'>
								<div className='stat-value'>{user.achievements.length}</div>
								<div className='stat-label'>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</div>
							</div>
						</div>
					</div>
				</div>

				<div className='progress-container'>
					<div className='progress-info'>
						<span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
						<span>{user.progress}%</span>
					</div>
					<div className='progress-bar'>
						<div
							className='progress-fill'
							style={{ width: `${user.progress}%` }}
						></div>
					</div>
				</div>

				<div className='profile-section'>
					<h3 className='section-title'>–û–±–æ –º–Ω–µ</h3>
					<p className='about-text'>{user.about}</p>
				</div>

				<div className='profile-section'>
					<h3 className='section-title'>–ù–∞–≤—ã–∫–∏</h3>
					<div className='skills-container'>
						{user.skills.map((skill, index) => (
							<span key={index} className='skill-tag'>
								{skill}
							</span>
						))}
					</div>
				</div>

				<div className='profile-section'>
					<h3 className='section-title'>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
					<div className='achievements-grid'>
						{user.achievements.map((achievement, index) => (
							<div key={index} className='achievement-card'>
								<div className='achievement-icon'>üèÖ</div>
								<div className='achievement-text'>{achievement}</div>
							</div>
						))}
					</div>
				</div>
			</div>
		</div>
	)
}

function App() {
	return (
		<Router>
			<Routes>
				<Route path='/' element={<Leaderboard />} />
				<Route path='/user/:id' element={<UserProfile />} />
			</Routes>
		</Router>
	)
}

export default App
